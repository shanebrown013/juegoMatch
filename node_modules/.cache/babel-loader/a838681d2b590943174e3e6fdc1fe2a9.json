{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shanebrown/CSCE315/Project3_Juego/juego/juego/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shanebrown/CSCE315/Project3_Juego/juego/juego/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/shanebrown/CSCE315/Project3_Juego/juego/juego/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useMemo,useRef}from\"react\";import TinderCard from\"react-tinder-card\";import{database,UUID}from\"./firebase\";import'./TinderCards.css';import\"./SwipeButtons.css\";import CloseIcon from\"@material-ui/icons/Close\";import FavoriteIcon from\"@material-ui/icons/Favorite\";import SportsEsportsIcon from'@material-ui/icons/SportsEsports';import IconButton from\"@material-ui/core/IconButton\";import{Link}from\"react-router-dom\";import{useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TinderCards(){useEffect(function(){var unsubscribe=database.collection('USERS').onSnapshot(function(snapshot){return setPeople(snapshot.docs.map(function(doc){return doc.data();}));});return function(){//cleanup function\nunsubscribe();};},[]);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),people=_useState2[0],setPeople=_useState2[1];//\nvar _useState3=useState(people.length-1),_useState4=_slicedToArray(_useState3,2),currentIndex=_useState4[0],setCurrentIndex=_useState4[1];// THIS SHOULD BE UPDATE CURRENT INDEX\nvar _useState5=useState(),_useState6=_slicedToArray(_useState5,2),lastDirection=_useState6[0],setLastDirection=_useState6[1];var currentIndexRef=useRef(currentIndex);var currentPersonParam=\"/userstats?\";var updateCurrentIndex=function updateCurrentIndex(val){setCurrentIndex(val);currentIndexRef.current=val;};var childRefs=useMemo(function(){return Array(people.length).fill(0).map(function(i){return/*#__PURE__*/React.createRef();});},[currentIndex]);var canGoBack=currentIndex<people.length-1;var canSwipe=currentIndex>=0;var allMatches=[];var pushMatches=function pushMatches(allMatches){database.collection('USERS').doc(UUID).update({\"matches\":allMatches}).then().catch(function(error){console.log(\"error1\");});};var match=function match(direction,index){console.log(\"onematch: \",people.at(index).name);var word=people.at(index).name+\", \";allMatches.push(word);console.log(\"Pushed into array\",allMatches);pushMatches(allMatches);};var swiped=function swiped(direction,nameToDelete,index){setLastDirection(direction);var directionNew=direction;console.log(\"directionNew\",directionNew);if(directionNew=='right'){match(direction,index);}updateCurrentIndex(index-1);};var outOfFrame=function outOfFrame(name,idx){console.log(\"\".concat(name,\" (\").concat(idx,\") left the screen!\"),currentIndexRef.current);currentIndexRef.current>=idx&&childRefs[idx].current.restoreCard();};var swipe=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dir){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"swipe attempted\");if(!(canSwipe&&currentIndex<people.length)){_context.next=6;break;}console.log(\"swipe entered\");_context.next=5;return childRefs[currentIndex].current.swipe(dir);case 5:// Swipe the card!\nconsole.log(\"swipe completed\");case 6:case\"end\":return _context.stop();}}},_callee);}));return function swipe(_x){return _ref.apply(this,arguments);};}();// the [] are dependencies on this function - if its blank it only runs once\n// 1:57:25\n// console.log(people[0].name);\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"tinderCards__cardContainer\",children:people.map(function(person,index){return/*#__PURE__*/_jsx(TinderCard,{className:\"swipe\",preventSwipe:['up','down'],ref:childRefs[index],onSwipe:function onSwipe(dir){return swiped(dir,person.name,index);},onCardLeftScreen:function onCardLeftScreen(){return outOfFrame(person.name,index);},children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",style:{backgroundImage:\"url(\".concat(person.url,\")\")},children:/*#__PURE__*/_jsx(\"h3\",{children:person.name})})},person.name);})}),/*#__PURE__*/_jsx(\"div\",{className:\"swipeButtons\",children:/*#__PURE__*/_jsx(IconButton,{className:\"swipeButtons__control\",component:Link,to:people.length>0&&\"/userstats/?name=\".concat(people.at(currentIndex).name),children:/*#__PURE__*/_jsx(SportsEsportsIcon,{fontSize:\"large\"})})})]});}export default TinderCards;// useState -  \n//  - can only be used inside of components \n//  - returns an array of values \n//  - const [value, setValue] --- first element is the state , \n//                                 second element is the function that updates the state\n// useEffect - \n//  - runs when a value changes , for example in a useState hook\n//  - this is called a side effect \n//  - takes in a function\n//  - this function runs everytime the page renders \n//  - the '[]' at the end is a conditional, meaning tht the function only runs when \n//    the variable inside it has changed.","map":{"version":3,"sources":["/Users/shanebrown/CSCE315/Project3_Juego/juego/juego/src/TinderCards.js"],"names":["React","useState","useEffect","useMemo","useRef","TinderCard","database","UUID","CloseIcon","FavoriteIcon","SportsEsportsIcon","IconButton","Link","useParams","TinderCards","unsubscribe","collection","onSnapshot","snapshot","setPeople","docs","map","doc","data","people","length","currentIndex","setCurrentIndex","lastDirection","setLastDirection","currentIndexRef","currentPersonParam","updateCurrentIndex","val","current","childRefs","Array","fill","i","createRef","canGoBack","canSwipe","allMatches","pushMatches","update","then","catch","error","console","log","match","direction","index","at","name","word","push","swiped","nameToDelete","directionNew","outOfFrame","idx","restoreCard","swipe","dir","person","backgroundImage","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport {database, UUID} from \"./firebase\";\nimport './TinderCards.css';\nimport \"./SwipeButtons.css\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport IconButton  from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport {useParams} from \"react-router-dom\";\n\nfunction TinderCards() {\n    \n    useEffect(() => {\n        const unsubscribe = database\n        .collection('USERS')\n        .onSnapshot(snapshot => ( setPeople(    snapshot.docs.map(doc => doc.data())  )        ) )\n        \n\n        return () =>{\n            //cleanup function\n            unsubscribe();\n        };\n\n    },[]);\n\n    const [people, setPeople] = useState([]); \n\n    //\n    const [currentIndex, setCurrentIndex] = useState(people.length - 1) // THIS SHOULD BE UPDATE CURRENT INDEX\n    const [lastDirection, setLastDirection] = useState()\n    const currentIndexRef = useRef(currentIndex)\n    const currentPersonParam = \"/userstats?\";\n\n    const updateCurrentIndex = (val) => {\n        setCurrentIndex(val)\n        currentIndexRef.current = val\n    }\n\n    const childRefs = useMemo(\n        () =>\n          Array(people.length)\n            .fill(0)\n            .map((i) => React.createRef()),\n        [currentIndex]\n      )\n    \n    const canGoBack = currentIndex < people.length - 1\n\n    const canSwipe = currentIndex >= 0\n\n    var allMatches = [];\n\n    const pushMatches = (allMatches) => {\n        database.collection('USERS').doc(UUID).update({\"matches\": allMatches}).then().catch((error) => {\n        console.log(\"error1\")\n      });\n    }\n\n\n    const match =(direction, index) => {\n        console.log(\"onematch: \", people.at(index).name)\n        var word = people.at(index).name + \", \"\n        allMatches.push(word)\n        console.log(\"Pushed into array\", allMatches)\n        pushMatches(allMatches)\n    }\n\n\n    const swiped = (direction, nameToDelete, index) => {\n        setLastDirection(direction)\n        const directionNew = direction;\n        console.log(\"directionNew\", directionNew)\n        if(directionNew == 'right') {\n            match(direction, index)\n        }\n        updateCurrentIndex(index - 1)\n    }\n\n    const outOfFrame = (name, idx) => {\n        console.log(`${name} (${idx}) left the screen!`, currentIndexRef.current)\n        currentIndexRef.current >= idx && childRefs[idx].current.restoreCard()\n    }\n\n    const swipe = async (dir) => {\n        console.log(\"swipe attempted\")\n        if (canSwipe && currentIndex < people.length) {\n            console.log(\"swipe entered\")\n            await childRefs[currentIndex].current.swipe(dir) // Swipe the card!\n            console.log(\"swipe completed\")\n        }\n    }\n    \n\n    // the [] are dependencies on this function - if its blank it only runs once\n\n    // 1:57:25\n    // console.log(people[0].name);\n    return(\n        <div>\n            <div className=\"tinderCards__cardContainer\" >\n                {people.map((person,index) => (\n                    <TinderCard \n                        className = \"swipe\" \n                        key={person.name} \n                        preventSwipe={['up','down']} \n                        ref={childRefs[index]}\n                        onSwipe={(dir) => swiped(dir, person.name, index)}\n                        onCardLeftScreen={() => outOfFrame(person.name, index)}\n                    >\n                        <div className=\"card\" style={{ backgroundImage: `url(${person.url})` }} >\n                            <h3>{person.name}</h3>\n                        </div>\n                    </TinderCard>\n                ))}\n            </div>\n            <div className='swipeButtons'>\n                {/* <IconButton className=\"swipeButtons__left\" onClick={() => swipe('left')}>\n                    <CloseIcon fontSize = \"large\" />\n                </IconButton> */}\n                <IconButton className=\"swipeButtons__control\" component = {Link} to = {people.length > 0 && `/userstats/?name=${people.at(currentIndex).name}`}>\n                    <SportsEsportsIcon fontSize = \"large\" />\n                </IconButton>\n                {/* <IconButton className=\"swipeButtons__right\" onClick={() => swipe('right')}>\n                    <FavoriteIcon fontSize = \"large\" />\n                </IconButton> */}\n            </div>\n            {/* <h4>Stats page: <Link to = {people.length > 0 && `/userstats/?name=${people.at(currentIndex).name}&chess=${people.at(currentIndex).chess}`}>{people.length > 0 && people.at(currentIndex).name}</Link></h4> */}\n            {/* {lastDirection ? (\n                <h2 key={lastDirection} className='infoText'>\n                You swiped {lastDirection}, <br/>\n                now swipe on: <br/>\n                 {people.at(currentIndex).name} <br/>\n                 currentIndex = {currentIndex}\n                </h2>\n            ) : (\n                <h2 className='infoText'>\n                Swipe or Click <br/>\n                on {currentIndex}\n                </h2>\n            )} */}\n        </div> \n    )\n}\n\nexport default TinderCards\n\n// useState -  \n//  - can only be used inside of components \n//  - returns an array of values \n//  - const [value, setValue] --- first element is the state , \n//                                 second element is the function that updates the state\n\n// useEffect - \n//  - runs when a value changes , for example in a useState hook\n//  - this is called a side effect \n//  - takes in a function\n//  - this function runs everytime the page renders \n//  - the '[]' at the end is a conditional, meaning tht the function only runs when \n//    the variable inside it has changed."]},"metadata":{},"sourceType":"module"}